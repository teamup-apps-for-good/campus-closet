<p style="color: green"><%= notice %></p>

<div style="float: right; margin-right: 20px;">
  <div><strong>Account Details</strong><br></div>
  <%= render @user %>
  <div>
    <%= link_to "Edit Account", edit_user_path(@user) %>
    <%= link_to "New time slot", new_time_slot_path %>
    <%= link_to "View Time Slots", time_slots_path %>

    <%= button_to "Delete Account", @user, method: :delete %>
  </div>
</div>


<h2>Past Pickups:</h2>
<% @user.donated_pickups.each do |pickup| %>
  
  <p>
    <div class="col-md-4 mb-4">
      <div class="card">
        <% if pickup.item.image_url.present? %>
          <%= image_tag pickup.item.image_url, class: "card-img-top img-fluid", alt: "Item Image", style: "object-fit: contain; height: 500px;" %>
        <% else %>
          <img src="placeholder_image_url" class="card-img-top img-fluid" alt="No image available" style="object-fit: contain; height: 500px;">
        <% end %>
        <div class="card-body">
          <%= render pickup.item %>
        </div>
      </div>
    </div>
  </p>
<% end %>

<h2>Current Requests:</h2>
<% @user.donated_requests.each do |request| %>
  <p>
  <div class="col-md-4 mb-4">
    <div class="card">
      <% if request.item.image_url.present? %>
        <%= image_tag request.item.image_url, class: "card-img-top img-fluid", alt: "Item Image", style: "object-fit: contain; height: 500px;" %>
      <% else %>
        <img src="placeholder_image_url" class="card-img-top img-fluid" alt="No image available" style="object-fit: contain; height: 500px;">
      <% end %>
      <div class="card-body">
        <%= render request.item %>
        <div class="btn btn-primary btn-lg">
          <%= button_tag "Confirm your item has been delivered", class: "confirm_pickup_button", data: {donor_id: request.donor_id, receiver_id: request.receiver_id, item_id: request.item.id, request_id: request.id}%>
        </div>
      </div>
      <% if request.receiver %>
        <button onclick="showMap('map-container-<%= request.id %>')">Show Map</button>
        <div id="map-container-<%= request.id %>" class="map_container">
          <%= js_map [{latitude: request.receiver.latitude, longitude: request.receiver.longitude}], height: "300px", controls: true %>
        </div>
      <% else %>
        <p>Receiver location not available.</p>
      <% end %>
    </div>
  </div>
</p>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const timeSlotButtons = document.querySelectorAll('.time-slot button');

    timeSlotButtons.forEach(button => {
      button.addEventListener('click', function() {
        
      });
    });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const confirmPickupButtons = document.querySelectorAll('.confirm_pickup_button');
    confirmPickupButtons.forEach(button => {
      button.addEventListener('click', function() {
        if (window.confirm('Confirm your item has been delivered and dropped-off.')) {
          console.log(this.dataset)
          const donorId = this.dataset.donorId;
          const receiverId = this.dataset.receiverId;
          const itemId = this.dataset.itemId;
          const requestId = this.dataset.requestId;
          var pickup_created = false;

          const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
          fetch(`/pickups/`, {
            method: 'post',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrfToken
            },
            credentials: 'same-origin',
            body: JSON.stringify({
            pickup: {
              item_id: itemId, 
              donor_id: donorId,
              receiver_id: receiverId
            }
          })
          }).then(response => {
            if (response.ok) {
              fetch(`/requests/${requestId}`, {
                method: 'delete',
                headers: {
                  'Content-Type': 'application/json',
                  'X-CSRF-Token': csrfToken
                },
                credentials: 'same-origin',
                body: JSON.stringify({
              })
              }).then(response => {
                if (response.ok) {
                  console.log('Item has been updated and moved to previous pickups');
                  location.reload();
                } else {
                  console.log('Item has been updated and moved to previous pickups');
                  location.reload();
                }
              }).catch(error => {
                console.error('Error:', error);
              });
            } else {
              alert('Item failed to update - was not moved');
            }
          }).catch(error => {
            console.error('Error:', error);
          });
        }
      });
    });
  });
</script>

<script>
window.onload = function() {
  var el = document.getElementsByClassName("map_container")[0].setAttribute("style","display: none;");
};
function showMap(containerId) {
  var el = document.getElementsByClassName("map_container")[0]

  if (el.style.display === 'none') {
    var el = document.getElementsByClassName("map_container")[0].setAttribute("style","display: block; background-color: #F5F5F5;");
  } else {
    var el = document.getElementsByClassName("map_container")[0].setAttribute("style","display: none");
  }
  
}
</script>
